swagger: '2.0'
info:
  description: Operations can be done with Braas.
  version: 1.0.0
  title: Braas API
  contact:
    email: araguacaima@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: ${DEPLOYED_SERVER}
tags:
- name: Rules base
  description: Manages your own rule's base as a spreadsheet. It can be uploaded from a locally file or even defined remotely thru a Google Drive Spreadsheet URL. This rule's base can also be downloaded
- name: Rules engine execution
  description: Once you've defined the rules base, you can use these APIs to pass your custom objet to the rules engine
- name: Utils
  description: Some extra utilities
schemes:
- http
- https
paths:
  /api/rules-base/{braasSessionId}/file:
    get:
      tags:
      - Rules base
      summary: Download the rule's base.
      description: Download the rule's base you previously uploaded in current session as a spreadsheet file or non-content if any.
      operationId: get-file-rules-base
      parameters:
        - $ref: "#/parameters/braas-session"
      produces:
        - application/vnd.google-apps.spreadsheet
      responses:
        200:
          description: OK
        204:
          description: No content
      security:
        - braas-auth:
          - read:base
        - braas-session-id: []
    put:
      tags:
      - Rules base
      summary: Add a new or replace a local file based rule's base
      description: Upload a new rule's base as a spreadsheet from a locally file if it doesn't previously uploaded, or replace an existing one. If there is already a rule's base setted this method will overide it. This method will fail if any non-authorized user attempts to use it.
      operationId: add-or-replace-file-rules-base
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      parameters:
        - $ref: "#/parameters/braas-session"
        - in: formData
          name: spreadsheet
          type: file
          required: true
          description: The spreadsheet file on which the rules resides
          x-mimetype: application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.google-apps.spreadsheet
        - in: formData
          name: schema-file
          type: file
          required: true
          description:  A file with a json map containing every class schema used within rules.
      responses:
        201:
         description: Created
        202:
         description: Accepted
        401:
         description: Unauthorized
        405:
         description: Invalid input
        409:
          description: Conflict
        424:
          description: Missing dependencies
      security:
        - braas-auth:
          - write:rule
          - read:rule
        - braas-session-id: []
    delete:
      tags:
        - Rules base
      summary: Delete an existent rule's base file
      description: Delete the rule's base file previously uploaded. This method will fail if no rule's base file was previously uploaded
      operationId: delete-file-rules-base
      parameters:
        - $ref: "#/parameters/braas-session"
      responses:
        200:
          description: OK
        404:
          description: Rule's base not found
      security:
        - braas-auth:
          - delete:rule
        - braas-session-id: []
  #  /api/rules-base/{braasSessionId}/google-drive:
  #    get:
  #      tags:
  #        - Rules base
  #      summary: Get the google drive rule's base reference.
  #      description: Redirects to the google drive spreadsheet rule's base you have previously configured in current session or error if any.
  #      operationId: get-google-drive-rules-base
  #      parameters:
  #        - $ref: "#/parameters/braas-session"
  #      responses:
  #        302:
  #          description: Redirect
  #        409:
  #          description: Conflict
  #      security:
  #        - braas-auth:
  #            - read:base
  #        - braas-session-id: []
  #    put:
  #      tags:
  #        - Rules base
  #      summary: Add a new or replace the based rule's base based on an google drive spreadsheet
  #      description: Uploads a new rule's base based on a remote google drive spreadsheet if it doesn't previously uploaded, or replaces an existing reference to it. If there is already a rule's base setted this method will overide the remote reference to it. This method will fail if any non-authorized user attempts to use it.
  #      operationId: add-or-replace-google-drive-rules-base
  #      parameters:
  #        - $ref: "#/parameters/braas-session"
  #      consumes:
  #        - application/json
  #      parameters:
  #        - in: body
  #          name: spreadsheet
  #          type:
  #            $ref: "#/definitions/google-drive-model"
  #          required: true
  #          description: Information for defining the rule's based on a Google Drive spreadsheet
  #      responses:
  #        201:
  #          description: Created
  #        202:
  #          description: Accepted
  #        401:
  #          description: Unauthorized
  #        405:
  #          description: Invalid input
  #        409:
  #          description: Conflict
  #        424:
  #          description: Missing dependencies
  #      security:
  #        - braas-auth:
  #            - write:rule
  #            - read:rule
  #        - braas-session-id: []
  #    delete:
  #      tags:
  #        - Rules base
  #      summary: Delete an existent google drive rule's base
  #      description: Delete the google drive rule's base previously configured. This method will fail if no rule's base was previously configured
  #      operationId: delete-google-drive-rules-base
  #      parameters:
  #        - $ref: "#/parameters/braas-session"
  #      responses:
  #        200:
  #          description: OK
  #        404:
  #          description: Rule's base not found
  #      security:
  #        - braas-auth:
  #            - delete:rule
  #        - braas-session-id: []
  /api/rules-base/{braasSessionId}/binary:
    get:
      tags:
        - Rules base
      summary: Download the rule's base.
      description: Download the rule's base you previously uploaded in current session as a spreadsheet or non-content if any.
      operationId: get-binary-rules-base
      parameters:
        - $ref: "#/parameters/braas-session"
      produces:
        - application/vnd.google-apps.spreadsheet
      responses:
        200:
          description: OK
        204:
          description: No content
      security:
        - braas-auth:
            - read:base
        - braas-session-id: []
    put:
      tags:
        - Rules base
      summary: Add a new or replace the rule's base based on a binary spreadsheet
      description: Uploads a new rule's base based on a Base64 binary spreadsheet if it doesn't previously uploaded, or replaces an existing reference to it. If there is already a rule's base setted this method will overide the remote reference to it. This method will fail if any non-authorized user attempts to use it. The binary data must be encoded thru Base64. After decoded, bytes array resulting must satisfy some of the following mime types [application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.google-apps.spreadsheet] and s
      operationId: add-or-replace-binary-rules-base
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/braas-session"
        - in: body
          name: rules-base
          schema:
            $ref: "#/definitions/binary-model"
          required: true
          description: Binary spreadsheet information that contains the rule's base and schemas
      responses:
        201:
          description: Created
        202:
          description: Accepted
        401:
          description: Unauthorized
        405:
          description: Invalid input
        409:
          description: Conflict
        424:
          description: Missing dependencies
      security:
        - braas-auth:
            - write:rule
            - read:rule
        - braas-session-id: []
    delete:
      tags:
        - Rules base
      summary: Delete an existent rule's base
      description: Delete the rule's base previously configured. This method will fail if no rule's base was previously configured
      operationId: delete-binary-rules-base
      parameters:
        - $ref: "#/parameters/braas-session"
      responses:
        200:
          description: OK
        404:
          description: Rule's base not found
      security:
        - braas-auth:
            - delete:rule
        - braas-session-id: []
  /api/rules-base/{braasSessionId}/assets:
    post:
      tags:
        - Rules Engine Execution
      summary: Performs the rule's execution according to incoming assets
      description: By taking the incoming assets, this method executes the rule engine and return whatever such rules have programmed to return. This method will fail too for any non-authorized user or if no rule's base is previously provided.
      operationId: execute-assets
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/braas-session"
        - $ref: "#/parameters/locale"
        - in: body
          name: assets
          description: The set of assets to be executed. It could be a single object or an array of them. If you chose to omit this parameter you should mandatory provide an assets-file parameter, as described below
          schema:
            type: object
      responses:
        202:
          description: Accepted
        401:
          description: Unauthorized
        405:
          description: Invalid input
        424:
          description: Failed dependency
      security:
        - braas-auth:
          - read:base
          - execute:rule
        - braas-session-id: []
  /api/json-schema:
    post:
      tags:
        - Utils
      summary: Creates a returns an json-schema form incoming zip or jar of classes
      description: Creates a returns an json-schema form incoming zip or jar of classes
      operationId: create-json-schema
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      parameters:
        - in: formData
          name: zip
          type: file
          required: false
          description: Zip file with classes inside
          x-mimetype: application/zip,application/x-zip-compressed
        - in: formData
          name: jar
          type: file
          required: false
          description: Jar file with classes.
          x-mimetype: application/java-archive
      responses:
        201:
          description: Created
        202:
          description: Accepted
        405:
          description: Invalid input
        409:
          description: Conflict
  /api/encoded-rules:
    post:
      tags:
        - Utils
      summary: Returns a Base64 encoded string from a Spreadsheet
      description: Returns a Base64 encoded string from a Spreadsheet. This kind of string is useful for calling PUT /api/rules-base/binary method
      operationId: create-encoded-rules
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      produces:
        - text/plain
      parameters:
        - in: formData
          name: spreadsheet
          type: file
          required: true
          description: The spreadsheet file on which the rules resides
          x-mimetype: application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.google-apps.spreadsheet
      responses:
        200:
          description: OK
        405:
          description: Invalid input
securityDefinitions:
  braas-auth:
    type: oauth2
    authorizationUrl: http://${DEPLOYED_SERVER}/login
    tokenUrl: http://${DEPLOYED_SERVER}/oauth/token
    flow: implicit
    scopes:
      delete:base: Delete the rule's base
      write:base: Modify or add the rule's base
      read:base: Read the rule's base
      execute:rule: Execute a set of assets according to the rule's base
      admin: Full administrative rights
  api-key:
    type: apiKey
    name: apiKey
    in: header
  braas-session-id:
    type: basic
    name: Cookie
    in: header
# Reusable parameters:
parameters:
  braas-session:
    name: braasSessionId
    in: path
    type: string
    required: false
    description: Desired session-id that consumer what's to use in order to identify its namespace. If absent an arbitrary and temporary UUID will be generated.
  locale:
    name: locale
    in: query
    type: string
    required: false
    description: Stablish the desired locale in order to handle properly i18n messages or data returned by rules base when multiple languages are setted on it.
  rules-base-types:
    name: rules-base-type
    in: path
    type: string
    enum:
      - WORKBENCH
      - MAVEN
      - ABSOLUTE_DECISION_TABLE_PATH
      - GOOGLE_DRIVE_DECISION_TABLE_PATH
      - ABSOLUTE_DRL_PATH
    required: true
    description: Rules base type.
# Definitions:
definitions:
  google-drive-model:
    type: object
    description: Information for defining the rule's based on a Google Drive spreadsheet
    properties:
      rules:
        type: object
        description: Unique identifier within Google Drive platform for spreadsheet file that represents the rules' base
        properties:
          path:
            type: string
            description: Unique identifier within Google Drive platform for spreadsheet file that represents the rules' base
            required: true
        required: true
      credential:
        type: object
        description: User credential information for consuming Google Drive
        required: true
    required:
      - rules
  binary-model:
    type: object
    description: Information for defining the rule's based on a binary spreadsheet
    properties:
      spreadsheet:
        type: object
        description: Information about the spreadsheet that contains the rule's base
        properties:
          binary:
            type: string
            description: Base64 binary spreadsheet bytes array information that contains the rule's base
            required: true
      schema:
        type: object
        description: A json object with a map or array that contains every class schema used within rules.
        required: true
    required:
      - binary
      - schema